{"version":3,"sources":["UI/Card/Card.module.css","UI/SearchInput/SearchInput.module.css","components/CountryList/CountryList.module.css","UI/Loader/Loader.module.css","UI/Pagination/Pagination.module.css","components/Navigation/Toolbar/Toolbar.module.css","UI/Dropdown/Dropdown.module.css","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","axios.js","components/CountryList/CountryList.js","UI/SearchInput/SearchInput.js","containers/Searchbar/Searchbar.js","UI/Loader/Loader.js","UI/Dropdown/Dropdown.js","UI/Pagination/Pagination.js","containers/PageSelector/PageSelector.js","containers/Countries/Countries.js","containers/Home/Home.js","UI/Card/Card.js","containers/CountryDetails/CountryDetails.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","props","className","classes","topnav","to","Layout","Fragment","style","height","this","children","React","Component","instance","axios","create","baseURL","CountryList","countriesJSX","countries","map","country","index","key","alpha3Code","onClick","onCountryClickHandler","col","join","data-label","src","flag","alt","width","name","capital","region","margin","SearchInput","search","type","searchTerm","placeholder","value","q","onChange","e","onChangeQueryHandler","target","onKeyPress","onKeyPressedHandler","searchButton","onSearchHandler","Searchbar","state","setState","selectedRegion","qs","parse","location","ignoreQueryPrefix","history","push","event","query","Loader","loading","Dropdown","optionsJSX","options","option","allOption","unshift","marginLeft","onSelectRegionHandler","Pagination","buttonJSX","i","button","pageSelected","active","changePageSelectedHandler","numPages","createButtons","pagination","PageSelector","pageSize","setNumPages","Math","ceil","Number","totalResults","updatePageSelected","page","Countries","displayedCountries","getCountries","get","then","res","data","filterCountries","catch","err","console","log","filter","toLowerCase","includes","code","getDropdownOptions","ar","indexOf","dropdownOptions","length","marginTop","color","slice","Home","Card","container","card","countryDetails","table","nativeName","area","population","borders","border","onBorderCountryClickHandler","CountryDetails","countryCode","getCountryDetails","pathname","split","glide","val","spring","stiffness","damping","pageTransitions","atEnter","offset","atLeave","atActive","routes","mapStyles","styles","transform","path","exact","component","withRouter","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d55c7815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__2ZW9H\",\"card\":\"Card_card__b7d4V\",\"card-body\":\"Card_card-body__2qwfP\",\"card-text\":\"Card_card-text__RL8SR\",\"table\":\"Card_table__3KB70\",\"button\":\"Card_button__1pitI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchInput_search__1R9c8\",\"searchTerm\":\"SearchInput_searchTerm__1vRYr\",\"searchButton\":\"SearchInput_searchButton__xLfFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"responsive-table\":\"CountryList_responsive-table__3nVF2\",\"table-header\":\"CountryList_table-header__3dO7c\",\"table-row\":\"CountryList_table-row__Frehc\",\"col-1\":\"CountryList_col-1__M6gQ8\",\"col-2\":\"CountryList_col-2__1V8ih\",\"col-3\":\"CountryList_col-3__2Hm4T\",\"col-4\":\"CountryList_col-4__3yONx\",\"container\":\"CountryList_container__2mVXX\",\"col\":\"CountryList_col__kRldU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Loader_content__23ZcP\",\"loading\":\"Loader_loading__2RtHX\",\"text\":\"Loader_text__3VDFL\",\"loading2\":\"Loader_loading2__33dZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2gipB\",\"active\":\"Pagination_active__IdCWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"Toolbar_topnav__3aPD9\",\"active\":\"Toolbar_active__3zl_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-css\":\"Dropdown_select-css__1eS9A\"};","import React from \"react\";\n\nimport classes from \"./Toolbar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Toolbar = (props) => {\n  return (\n    <div className={classes.topnav}>\n      <NavLink className=\"active\" to=\"/\">\n        Country Finder\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Toolbar></Toolbar>\n        <main style={{ height: \"100%\" }}>{this.props.children}</main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://restcountries.eu/rest/v2\",\n});\n\nexport default instance;\n","import React from \"react\";\nimport classes from \"./CountryList.module.css\";\n\nconst CountryList = (props) => {\n  const countriesJSX = props.countries.map((country, index) => (\n    <li\n      className={classes[\"table-row\"]}\n      key={country.alpha3Code}\n      onClick={() => props.onCountryClickHandler(index)}\n    >\n      <div\n        className={[classes.col, classes[\"col-1\"]].join(\" \")}\n        data-label=\"Flag\"\n      >\n        <img src={country.flag} alt=\"Country's flag\" width=\"45px\"></img>\n      </div>\n      <div\n        className={[classes.col, classes[\"col-2\"]].join(\" \")}\n        data-label=\"Country Name\"\n      >\n        {country.name}\n      </div>\n      <div\n        className={[classes.col, classes[\"col-3\"]].join(\" \")}\n        data-label=\"Capital\"\n      >\n        {country.capital ? country.capital : \"-\"}\n      </div>\n      <div\n        className={[classes.col, classes[\"col-4\"]].join(\" \")}\n        data-label=\"Region\"\n      >\n        {country.region}\n      </div>\n    </li>\n  ));\n\n  return (\n    <div className={classes[\"container\"]} style={{ margin: \"auto\" }}>\n      <ul className={classes[\"responsive-table\"]}>\n        <li className={classes[\"table-header\"]}>\n          <div className={[classes.col, classes[\"col-1\"]].join(\" \")}>Flag</div>\n          <div className={[classes.col, classes[\"col-2\"]].join(\" \")}>\n            Country Name\n          </div>\n          <div className={[classes.col, classes[\"col-3\"]].join(\" \")}>\n            Capital\n          </div>\n          <div className={[classes.col, classes[\"col-4\"]].join(\" \")}>\n            Region\n          </div>\n        </li>\n        {countriesJSX}\n      </ul>\n    </div>\n  );\n};\n\nexport default CountryList;\n","import React from \"react\";\n\nimport classes from \"./SearchInput.module.css\";\n\nconst SearchInput = (props) => {\n  return (\n    <div className={classes.search}>\n      <input\n        type=\"text\"\n        className={classes.searchTerm}\n        placeholder=\"Which country are you looking for?\"\n        value={props.q}\n        onChange={(e) => props.onChangeQueryHandler(e.target.value)}\n        onKeyPress={props.onKeyPressedHandler}\n      />\n      <button\n        type=\"submit\"\n        className={classes.searchButton}\n        onClick={props.onSearchHandler}\n      >\n        <i className=\"fa fa-search\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\nimport qs from \"qs\";\n\nimport SearchInput from \"../../UI/SearchInput/SearchInput\";\n\nclass Searchbar extends React.Component {\n  state = {\n    q: \"\",\n  };\n\n  componentDidMount() {\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).q;\n\n    if (query) {\n      this.setState({\n        q: query,\n      });\n    }\n  }\n\n  onChangeQueryHandler = (q) => {\n    this.setState({\n      q: q,\n    });\n  };\n\n  onSearchHandler = () => {\n    let selectedRegion = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).region;\n\n    if (selectedRegion) {\n      this.props.history.push(\n        `/countries?q=${this.state.q}&region=${selectedRegion}`\n      );\n    } else {\n      this.props.history.push(`/countries?q=${this.state.q}`);\n    }\n  };\n\n  onKeyPressedHandler = (event) => {\n    if (event.key === \"Enter\") {\n      this.onSearchHandler();\n    }\n  };\n\n  render() {\n    return (\n      <SearchInput\n        onChangeQueryHandler={this.onChangeQueryHandler}\n        onSearchHandler={this.onSearchHandler}\n        onKeyPressedHandler={this.onKeyPressedHandler}\n        q={this.state.q}\n      ></SearchInput>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nimport classes from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <React.Fragment>\n      {/* <div className={classes.about}>\n        <a\n          className={classes[\"bg_links social portfolio\"]}\n          href=\"https://www.rafaelalucas.com\"\n          target=\"_blank\"\n        >\n          <span class=\"icon\"></span>\n        </a>\n        <a\n          className={classes[\"bg_links social dribbble\"]}\n          href=\"https://dribbble.com/rafaelalucas\"\n          target=\"_blank\"\n        >\n          <span class=\"icon\"></span>\n        </a>\n        <a\n          className={classes[\"bg_links social linkedin\"]}\n          href=\"https://www.linkedin.com/in/rafaelalucas/\"\n          target=\"_blank\"\n        >\n          <span className={classes.icon}></span>\n        </a>\n        <a className={classes[\"bg_links logo\"]}></a>\n      </div> */}\n\n      <div className={classes[\"content\"]}>\n        <div className={classes.loading}>\n          <p>loading</p>\n          <span></span>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nimport classes from \"./Dropdown.module.css\";\n\nconst Dropdown = (props) => {\n  let optionsJSX = [];\n  if (props.options) {\n    optionsJSX = props.options.map((option, index) =>\n      option ? <option key={index + 1}>{option}</option> : null\n    );\n  }\n\n  const allOption = <option key={0}>All</option>;\n  optionsJSX.unshift(allOption);\n\n  return (\n    <div>\n      <label>Select Region</label>\n      <select\n        className={classes[\"select-css\"]}\n        style={{ marginLeft: \"20px\" }}\n        onChange={(e) => props.onSelectRegionHandler(e.target.value)}\n        value={props.selectedRegion || \"\"}\n      >\n        {optionsJSX}\n      </select>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport classes from \"./Pagination.module.css\";\n\nconst Pagination = (props) => {\n  const buttonJSX = [];\n\n  const createButtons = () => {\n    for (let i = 0; i < props.numPages; i++) {\n      const button = (\n        <button\n          key={i + 1}\n          className={props.pageSelected === i + 1 ? classes.active : null}\n          onClick={() => props.changePageSelectedHandler(i + 1)}\n        >\n          {i + 1}\n        </button>\n      );\n\n      buttonJSX.push(button);\n    }\n  };\n\n  createButtons();\n\n  return (\n    <div className={classes.pagination}>\n      <button\n        onClick={() => props.changePageSelectedHandler(props.pageSelected - 1)}\n      >\n        &laquo;\n      </button>\n      {buttonJSX}\n      <button\n        onClick={() => props.changePageSelectedHandler(props.pageSelected + 1)}\n      >\n        &raquo;\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport qs from \"qs\";\n\nimport Pagination from \"../../UI/Pagination/Pagination\";\n\nclass PageSelector extends React.Component {\n  state = {\n    pageSize: 50,\n    pageSelected: 1,\n    numPages: 5,\n  };\n\n  componentDidMount() {\n    this.updatePageSelected();\n    this.setNumPages();\n  }\n\n  componentDidUpdate() {\n    this.updatePageSelected();\n    this.setNumPages();\n  }\n\n  setNumPages = () => {\n    const numPages = Math.ceil(\n      Number(this.props.totalResults) / Number(this.props.pageSize)\n    );\n\n    if (this.state.numPages !== numPages) {\n      this.setState({\n        numPages: numPages,\n      });\n    }\n  };\n\n  updatePageSelected = () => {\n    let pageSelected = Number(\n      qs.parse(this.props.location.search, {\n        ignoreQueryPrefix: true,\n      }).page\n    );\n\n    if (pageSelected && this.state.pageSelected !== pageSelected) {\n      this.setState({\n        pageSelected: pageSelected,\n      });\n    }\n  };\n\n  changePageSelectedHandler = (page) => {\n    if (page > this.state.numPages) {\n      page = this.state.numPages;\n    } else if (page < 1) {\n      page = 1;\n    }\n    this.setState({\n      pageSelected: page,\n    });\n\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).q;\n\n    let selectedRegion = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).region;\n\n    if (query && selectedRegion) {\n      this.props.history.push(\n        `/countries?q=${query}&region=${selectedRegion}&page=${page}`\n      );\n    } else if (query) {\n      this.props.history.push(`/countries?q=${query}&page=${page}`);\n    } else if (selectedRegion) {\n      this.props.history.push(\n        `/countries?region=${selectedRegion}&page=${page}`\n      );\n    } else {\n      this.props.history.push(`/countries?page=${page}`);\n    }\n  };\n\n  render() {\n    return (\n      <Pagination\n        changePageSelectedHandler={this.changePageSelectedHandler}\n        pageSelected={this.state.pageSelected}\n        numPages={this.state.numPages}\n      ></Pagination>\n    );\n  }\n}\n\nexport default PageSelector;\n","import React from \"react\";\nimport qs from \"qs\";\n\nimport axios from \"../../axios\";\nimport CountryList from \"../../components/CountryList/CountryList\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport Loader from \"../../UI/Loader/Loader\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport PageSelector from \"../PageSelector/PageSelector\";\n\nclass Countries extends React.Component {\n  state = {\n    q: \"\",\n    countries: [],\n    displayedCountries: [],\n    selectedRegion: null,\n    loading: false,\n    pageSize: 50,\n    pageSelected: 1,\n  };\n\n  componentDidMount() {\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).q;\n\n    let selectedRegion = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).region;\n\n    let pageSelected = Number(\n      qs.parse(this.props.location.search, {\n        ignoreQueryPrefix: true,\n      }).page\n    );\n\n    if (selectedRegion === \"All\") {\n      selectedRegion = null;\n    }\n\n    if (query) {\n      this.setState({\n        q: query,\n      });\n    }\n\n    if (selectedRegion) {\n      this.setState({\n        selectedRegion: selectedRegion,\n      });\n    }\n\n    if (pageSelected) {\n      this.setState({\n        pageSelected: pageSelected,\n      });\n    }\n\n    this.getCountries(query, selectedRegion);\n  }\n\n  componentDidUpdate() {\n    const query = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).q;\n\n    let selectedRegion = qs.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    }).region;\n\n    let pageSelected = Number(\n      qs.parse(this.props.location.search, {\n        ignoreQueryPrefix: true,\n      }).page\n    );\n\n    if (selectedRegion === \"All\") {\n      selectedRegion = null;\n    }\n\n    if (\n      this.state.q !== query &&\n      this.state.selectedRegion !== selectedRegion\n    ) {\n      this.setState({\n        q: query,\n        selectedRegion: selectedRegion,\n        pageSelected: 1,\n      });\n      this.filterCountries(query, selectedRegion);\n    } else if (this.state.q !== query) {\n      this.setState({\n        q: query,\n        pageSelected: 1,\n      });\n      this.filterCountries(query, selectedRegion);\n    } else if (this.state.selectedRegion !== selectedRegion) {\n      this.setState({\n        selectedRegion: selectedRegion,\n        pageSelected: 1,\n      });\n      this.filterCountries(query, selectedRegion);\n    }\n\n    if (pageSelected && this.state.pageSelected !== pageSelected) {\n      this.setState({\n        pageSelected: pageSelected,\n      });\n    }\n  }\n\n  getCountries = (query, selectedRegion) => {\n    this.setState({\n      loading: true,\n    });\n\n    axios\n      .get(\"/all?fields=name;capital;flag;region;alpha3Code\")\n      .then((res) => {\n        this.setState({\n          countries: res.data,\n          loading: false,\n        });\n        this.filterCountries(query, selectedRegion);\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  filterCountries = (query = null, selectedRegion = null) => {\n    let displayedCountries = this.state.countries;\n\n    if (query && selectedRegion) {\n      displayedCountries = displayedCountries.filter((country) => {\n        return (\n          country.name.toLowerCase().includes(query.toLowerCase()) &&\n          country.region === selectedRegion\n        );\n      });\n    } else if (query) {\n      displayedCountries = displayedCountries.filter((country) => {\n        return country.name.toLowerCase().includes(query.toLowerCase());\n      });\n    } else if (selectedRegion) {\n      displayedCountries = displayedCountries.filter((country) => {\n        return country.region === selectedRegion;\n      });\n    }\n\n    this.setState({\n      displayedCountries: displayedCountries,\n    });\n  };\n\n  onCountryClickHandler = (index) => {\n    const code = this.state.displayedCountries[index].alpha3Code;\n    const query = this.state.q;\n    const selectedRegion = this.state.selectedRegion;\n\n    if (query && selectedRegion) {\n      this.props.history.push(\n        `/countries/${code}?q=${query}&region=${selectedRegion}`\n      );\n    } else if (query) {\n      this.props.history.push(`/countries/${code}?q=${query}`);\n    } else if (selectedRegion) {\n      this.props.history.push(`/countries/${code}?region=${selectedRegion}`);\n    } else {\n      this.props.history.push(`/countries/${code}`);\n    }\n  };\n\n  getDropdownOptions = () => {\n    const allRegions = this.state.countries.map((country) => country.region);\n    return allRegions.filter((region, i, ar) => ar.indexOf(region) === i);\n  };\n\n  onSelectRegionHandler = (selectedRegion) => {\n    const query = this.state.q;\n\n    if (query && selectedRegion) {\n      this.props.history.push(`/countries?q=${query}&region=${selectedRegion}`);\n    } else if (selectedRegion) {\n      this.props.history.push(`/countries?region=${selectedRegion}`);\n    }\n  };\n\n  render() {\n    const dropdownOptions = this.getDropdownOptions();\n\n    return (\n      <div className=\"container\">\n        <Searchbar {...this.props}></Searchbar>\n        <Dropdown\n          options={dropdownOptions}\n          selectedRegion={this.state.selectedRegion}\n          onSelectRegionHandler={this.onSelectRegionHandler}\n        ></Dropdown>\n        {this.state.loading ? (\n          <Loader></Loader>\n        ) : this.state.displayedCountries.length === 0 ? (\n          <div style={{ marginTop: \"150px\", color: \"red\" }}>\n            No Results Found\n          </div>\n        ) : (\n          <CountryList\n            countries={this.state.displayedCountries.slice(\n              (this.state.pageSelected - 1) * this.state.pageSize,\n              this.state.pageSelected * this.state.pageSize\n            )}\n            onCountryClickHandler={this.onCountryClickHandler}\n          ></CountryList>\n        )}\n        {this.state.displayedCountries.length > 50 ? (\n          <PageSelector\n            {...this.props}\n            totalResults={this.state.displayedCountries.length}\n            pageSize={this.state.pageSize}\n          ></PageSelector>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Countries;\n","import React from \"react\";\nimport { Redirect } from \"react-router\";\n\nclass Home extends React.Component {\n  render() {\n    return <Redirect to=\"/countries\"></Redirect>;\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.card}>\n        <img src={props.countryDetails.flag} alt=\"Country's Flag\" />\n        <div className={classes[\"card-body\"]}>\n          <div className={classes[\"card-text\"]}>\n            <h3>{props.countryDetails.name}</h3>\n            <table className={classes.table}>\n              <tbody>\n                <tr>\n                  <td>Native Name</td>\n                  <td>{props.countryDetails.nativeName}</td>\n                </tr>\n                <tr>\n                  <td>Area</td>\n                  <td>{props.countryDetails.area}</td>\n                </tr>\n                <tr>\n                  <td>Capital</td>\n                  <td>{props.countryDetails.capital}</td>\n                </tr>\n                <tr>\n                  <td>Population</td>\n                  <td>{props.countryDetails.population}</td>\n                </tr>\n                <tr>\n                  <td>Region</td>\n                  <td>{props.countryDetails.region}</td>\n                </tr>\n                <tr>\n                  <td>Borders:</td>\n                  <td>\n                    {\" \"}\n                    {props.countryDetails.borders.map((border, index) => (\n                      <button\n                        key={index}\n                        className={classes.button}\n                        onClick={() =>\n                          props.onBorderCountryClickHandler(border)\n                        }\n                      >\n                        {border}\n                      </button>\n                    ))}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport axios from \"../../axios\";\nimport Card from \"../../UI/Card/Card\";\nimport Loader from \"../../UI/Loader/Loader\";\n\nclass CountryDetails extends React.Component {\n  state = { countryCode: \"\", countryDetails: null, loading: true };\n\n  componentDidMount() {\n    const countryCode = this.props.location.pathname.split(\"/\")[2];\n    this.setState({\n      countryCode: countryCode,\n    });\n\n    this.getCountryDetails(countryCode);\n  }\n\n  componentDidUpdate() {\n    const countryCode = this.props.location.pathname.split(\"/\")[2];\n\n    if (countryCode !== this.state.countryCode) {\n      this.setState({\n        countryCode: countryCode,\n      });\n\n      this.getCountryDetails(countryCode);\n    }\n  }\n\n  onBorderCountryClickHandler = (code) => {\n    this.props.history.push(`/countries/${code}`);\n  };\n\n  getCountryDetails = (countryCode) => {\n    this.setState({\n      loading: true,\n    });\n\n    axios\n      .get(`/alpha/${countryCode}`)\n      .then((res) => {\n        this.setState({\n          countryDetails: res.data,\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n\n  render() {\n    return this.state.loading ? (\n      <Loader></Loader>\n    ) : (\n      <Card\n        countryDetails={this.state.countryDetails}\n        onBorderCountryClickHandler={this.onBorderCountryClickHandler}\n      ></Card>\n    );\n  }\n}\n\nexport default CountryDetails;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { AnimatedSwitch, spring } from \"react-router-transition\";\n\nimport Countries from \"./containers/Countries/Countries\";\nimport Home from \"./containers/Home/Home\";\nimport CountryDetails from \"./containers/CountryDetails/CountryDetails\";\n\nconst glide = (val) => {\n  return spring(val, {\n    stiffness: 174,\n    damping: 24,\n  });\n};\n\nconst pageTransitions = {\n  atEnter: {\n    offset: 100,\n  },\n  atLeave: {\n    offset: glide(-100),\n  },\n  atActive: {\n    offset: glide(0),\n  },\n};\n\nconst routes = (\n  <AnimatedSwitch\n    {...pageTransitions}\n    mapStyles={(styles) => ({\n      transform: `translateX(${styles.offset}%)`,\n    })}\n    className=\"switch-wrapper\"\n  >\n    <Route path=\"/countries\" exact component={Countries}></Route>\n    <Route path=\"/countries/:id\" component={CountryDetails}></Route>\n    <Route path=\"/\" component={Home}></Route>\n  </AnimatedSwitch>\n);\n\nexport default routes;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport routes from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>{routes}</Layout>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}